@model Assistente_de_Estagio.Areas.Acesso.Models.NotificacaoViewmodel
@using Assistente_de_Estagio.Areas.Acesso.Models;
@{int count = 0;}
<ul class="collapsible">
    <li style="display: block">
        <div class="collapsible-header bg-light">
            
            @if(Model.NotificacacoesGerais != null)
            {
                count += Model.NotificacacoesGerais.Count;
            }
            @if(Model.NotificacacoesIndividuais != null)
            {
                count += Model.NotificacacoesGerais.Count;
            }
            <p class="h5-responsive">Notificações(@Html.Raw(count))</p>

        </div>
        <div class=" collapsible-body">
            @if (Model.NotificacacoesIndividuais != null)
            {
                @foreach (var item in Model.NotificacacoesIndividuais)
                {
                    @await Component.InvokeAsync(typeof(Assistente_de_Estagio.Areas.Acesso.Notificacoes.Components.VisualizacaoNotificacaoViewComponent.VisualizacaoNotificacaoViewComponent), new { TipoNotificacao = EnumTipoNotificacao.Individual, Notificacao = item })
                }
            }
            <hr />
            @if (Model.NotificacacoesGerais != null)
            {
                @foreach (var item in Model.NotificacacoesGerais)
                {
                    @await Component.InvokeAsync(typeof(Assistente_de_Estagio.Areas.Acesso.Notificacoes.Components.VisualizacaoNotificacaoViewComponent.VisualizacaoNotificacaoViewComponent), new { TipoNotificacao = EnumTipoNotificacao.Geral, Notificacao = item })
                }
            }
        </div>
    </li>
</ul>