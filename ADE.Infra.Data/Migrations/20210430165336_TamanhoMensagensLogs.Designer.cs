// <auto-generated />
using System;
using Assistente_de_Estagio.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ADE.Infra.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210430165336_TamanhoMensagensLogs")]
    partial class TamanhoMensagensLogs
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.5");

            modelBuilder.Entity("ADE.Dominio.Models.AlteracaoEntidadesSistema", b =>
                {
                    b.Property<int>("Identificador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AutorId")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("DataHoraExclusao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataHoraInclusao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataHoraUltimaAlteracao")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Entidade")
                        .HasColumnType("int");

                    b.Property<string>("IdAutor")
                        .HasColumnType("longtext");

                    b.Property<int>("IdentificadorEntidade")
                        .HasColumnType("int");

                    b.Property<string>("MensagemAlteracao")
                        .HasColumnType("longtext");

                    b.HasKey("Identificador");

                    b.HasIndex("AutorId");

                    b.ToTable("AlteracaoEntidadesSistema");
                });

            modelBuilder.Entity("ADE.Dominio.Models.AreaEstagioCurso", b =>
                {
                    b.Property<int>("Identificador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataHoraExclusao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataHoraInclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<DateTime>("DataHoraUltimaAlteracao")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<int>("IdCurso")
                        .HasColumnType("int(11)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Identificador")
                        .HasName("PRIMARY");

                    b.HasIndex("IdCurso");

                    b.ToTable("AreaEstagioCurso");
                });

            modelBuilder.Entity("ADE.Dominio.Models.Curso", b =>
                {
                    b.Property<int>("Identificador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<string>("Alerta")
                        .HasColumnType("tinytext");

                    b.Property<int>("CargaHorariaMinimaEstagio")
                        .HasColumnType("int(11)");

                    b.Property<string>("CoordenadorCurso")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<DateTime?>("DataHoraExclusao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataHoraInclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<DateTime>("DataHoraUltimaAlteracao")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<string>("DescricaoCurso")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EmailCoordenadorCurso")
                        .IsRequired()
                        .HasColumnType("varchar(256)");

                    b.Property<int?>("IdCurso")
                        .HasColumnType("int");

                    b.Property<int>("IdInstituicao")
                        .HasColumnType("int(11)");

                    b.Property<string>("Informacao")
                        .HasColumnType("tinytext");

                    b.Property<string>("NomeCurso")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<int>("TipoCurso")
                        .HasColumnType("int");

                    b.HasKey("Identificador")
                        .HasName("PRIMARY");

                    b.HasIndex("IdCurso")
                        .IsUnique();

                    b.HasIndex("IdInstituicao");

                    b.ToTable("Curso");
                });

            modelBuilder.Entity("ADE.Dominio.Models.Documento", b =>
                {
                    b.Property<int>("Identificador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<byte[]>("Arquivo")
                        .HasColumnType("longblob");

                    b.Property<byte[]>("ArquivoPDF")
                        .HasColumnType("longblob");

                    b.Property<string>("Assinatura")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("longtext");

                    b.Property<string>("Aviso")
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime?>("DataHoraExclusao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataHoraInclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<DateTime>("DataHoraUltimaAlteracao")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<string>("DescricaoDocumento")
                        .HasColumnType("text");

                    b.Property<string>("Etapa")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("longtext");

                    b.Property<int>("IdCurso")
                        .HasColumnType("int(11)");

                    b.Property<sbyte>("PosicaoDocumento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(4)")
                        .HasDefaultValueSql("'1'");

                    b.Property<ulong>("PossuiAssinaturaResposavelEstagio")
                        .HasColumnType("bit(1)");

                    b.Property<ulong>("PossuiCarimboCNPJ")
                        .HasColumnType("bit(1)");

                    b.Property<ulong>("PossuiData")
                        .HasColumnType("bit(1)");

                    b.Property<string>("Texto")
                        .HasColumnType("text");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("longtext");

                    b.Property<string>("TituloDocumento")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Visibilidade")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("longtext");

                    b.HasKey("Identificador")
                        .HasName("PRIMARY");

                    b.HasIndex("IdCurso")
                        .HasDatabaseName("UKIdCurso");

                    b.ToTable("Documento");
                });

            modelBuilder.Entity("ADE.Dominio.Models.HistoricoGeracaoDocumento", b =>
                {
                    b.Property<int>("Identificador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<DateTime?>("DataHoraExclusao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataHoraInclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<DateTime>("DataHoraUltimaAlteracao")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Documento")
                        .HasColumnType("int(11)")
                        .HasColumnName("IdDocumento");

                    b.Property<string>("IdUsuario")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Identificador")
                        .HasName("PRIMARY");

                    b.HasIndex("Documento");

                    b.HasIndex("IdUsuario")
                        .HasDatabaseName("IdUsuario");

                    b.ToTable("HistoricoGeracaoDocumento");
                });

            modelBuilder.Entity("ADE.Dominio.Models.Individuais.AtividadeEstagio", b =>
                {
                    b.Property<int>("Identificador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<int>("CondicaoVezes")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataHoraExclusao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataHoraInclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<DateTime>("DataHoraUltimaAlteracao")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<string>("Descricao")
                        .HasColumnType("longtext");

                    b.Property<string>("EnumEntidade")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("longtext");

                    b.Property<int>("IdCurso")
                        .HasColumnType("int(11)");

                    b.Property<int>("IdentificadorEntidadeAtividade")
                        .HasColumnType("int(11)");

                    b.Property<int>("TipoAtividade")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Identificador")
                        .HasName("PRIMARY");

                    b.HasIndex("IdCurso");

                    b.ToTable("AtividadeEstagio");
                });

            modelBuilder.Entity("ADE.Dominio.Models.Individuais.AtividadeUsuario", b =>
                {
                    b.Property<int>("Identificador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<bool>("Concluido")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DataHoraExclusao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataHoraInclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<DateTime>("DataHoraUltimaAlteracao")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<string>("Descricao")
                        .HasColumnType("longtext");

                    b.Property<int>("IdCurso")
                        .HasColumnType("int");

                    b.Property<string>("IdUsuario")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TipoAtividade")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("longtext");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Visibilidade")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("longtext");

                    b.HasKey("Identificador")
                        .HasName("PRIMARY");

                    b.HasIndex("IdUsuario");

                    b.ToTable("AtividadeUsuario");
                });

            modelBuilder.Entity("ADE.Dominio.Models.Individuais.FAQ", b =>
                {
                    b.Property<int>("Identificador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<DateTime?>("DataHoraExclusao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataHoraInclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<DateTime>("DataHoraUltimaAlteracao")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<int>("IdInstituicao")
                        .HasColumnType("int(11)");

                    b.Property<string>("IdUsuarioPergunta")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("IdUsuarioResposta")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Pergunta")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(500)")
                        .HasDefaultValueSql("'error'");

                    b.Property<int>("Pontuacao")
                        .HasColumnType("int(11)");

                    b.Property<string>("Resposta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(500)")
                        .HasDefaultValueSql("'error'");

                    b.Property<string>("Status")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("longtext");

                    b.HasKey("Identificador")
                        .HasName("PRIMARY");

                    b.HasIndex("IdInstituicao");

                    b.HasIndex("IdUsuarioResposta");

                    b.ToTable("FAQ");
                });

            modelBuilder.Entity("ADE.Dominio.Models.Individuais.Instituicao", b =>
                {
                    b.Property<int>("Identificador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("DataHoraExclusao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataHoraInclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<DateTime>("DataHoraUltimaAlteracao")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Diretor")
                        .IsRequired()
                        .HasColumnType("varchar(256)");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(256)");

                    b.Property<string>("Endereco")
                        .HasColumnType("varchar(256)");

                    b.Property<byte[]>("Logo")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(256)");

                    b.Property<string>("Telefone")
                        .HasColumnType("varchar(256)");

                    b.Property<string>("Website")
                        .HasColumnType("varchar(256)");

                    b.HasKey("Identificador")
                        .HasName("PRIMARY");

                    b.ToTable("Instituicao");
                });

            modelBuilder.Entity("ADE.Dominio.Models.Individuais.LogAcoesEspeciais", b =>
                {
                    b.Property<int>("Identificador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<string>("AcoesSistema")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("DataHoraExclusao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataHoraInclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<DateTime>("DataHoraUltimaAlteracao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("IdUsuario")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("LocalOrigem")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(150)")
                        .HasDefaultValueSql("'Error'");

                    b.Property<string>("Mensagem")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValueSql("'error'");

                    b.HasKey("Identificador")
                        .HasName("PRIMARY");

                    b.HasIndex("IdUsuario");

                    b.ToTable("LogAcoesEspeciais");
                });

            modelBuilder.Entity("ADE.Dominio.Models.Individuais.Logins", b =>
                {
                    b.Property<int>("Identificador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<DateTime?>("DataHoraExclusao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataHoraInclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<DateTime>("DataHoraLogin")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataHoraLogout")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataHoraUltimaAlteracao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("IdUsuario")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Identificador")
                        .HasName("PRIMARY");

                    b.HasIndex("IdUsuario")
                        .HasDatabaseName("UKIdUsuario");

                    b.ToTable("Logins");
                });

            modelBuilder.Entity("ADE.Dominio.Models.Individuais.MensagemIndividual", b =>
                {
                    b.Property<int>("Identificador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<string>("Conteudo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(500)")
                        .HasDefaultValueSql("'error'");

                    b.Property<DateTime?>("DataHoraExclusao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataHoraInclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<DateTime>("DataHoraUltimaAlteracao")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<string>("IdUsuarioDestino")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("IdUsuarioRemetente")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("longtext");

                    b.HasKey("Identificador")
                        .HasName("PRIMARY");

                    b.HasIndex("IdUsuarioRemetente");

                    b.ToTable("MensagemIndividual");
                });

            modelBuilder.Entity("ADE.Dominio.Models.Individuais.NotificacaoIndividual", b =>
                {
                    b.Property<int>("Identificador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<string>("Cabecalho")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(500)")
                        .HasDefaultValueSql("'error'");

                    b.Property<string>("Conteudo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(500)")
                        .HasDefaultValueSql("'error'");

                    b.Property<DateTime?>("DataHoraExclusao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataHoraInclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<DateTime>("DataHoraUltimaAlteracao")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<string>("IdUsuarioDestino")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("IdUsuarioRemetente")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("longtext");

                    b.HasKey("Identificador")
                        .HasName("PRIMARY");

                    b.HasIndex("IdUsuarioDestino");

                    b.ToTable("NotificacaoIndividual");
                });

            modelBuilder.Entity("ADE.Dominio.Models.Individuais.TourStep", b =>
                {
                    b.Property<int>("Identificador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<string>("Area")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(500)")
                        .HasDefaultValueSql("'error'");

                    b.Property<string>("Conteudo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(500)")
                        .HasDefaultValueSql("'error'");

                    b.Property<string>("Controlador")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(500)")
                        .HasDefaultValueSql("'error'");

                    b.Property<DateTime?>("DataHoraExclusao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataHoraInclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<DateTime>("DataHoraUltimaAlteracao")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<string>("IdElemento")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(500)")
                        .HasDefaultValueSql("'error'");

                    b.Property<int>("Posicao")
                        .HasColumnType("int(11)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(500)")
                        .HasDefaultValueSql("'error'");

                    b.Property<string>("View")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(500)")
                        .HasDefaultValueSql("'error'");

                    b.HasKey("Identificador")
                        .HasName("PRIMARY");

                    b.ToTable("TourStep");
                });

            modelBuilder.Entity("ADE.Dominio.Models.Individuais.UsuarioADE", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<bool>("AceitouTermos")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("DataHoraExclusao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataHoraInclusao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataHoraUltimaAlteracao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Estagiando")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("IdCurso")
                        .HasColumnType("int");

                    b.Property<int?>("IdCursoNavigationIdentificador")
                        .HasColumnType("int(11)");

                    b.Property<int>("IdInstituicao")
                        .HasColumnType("int");

                    b.Property<int?>("IdInstituicaoNavigationIdentificador")
                        .HasColumnType("int(11)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Logado")
                        .HasColumnType("tinyint(1)");

                    b.Property<byte[]>("Logo")
                        .HasColumnType("longblob");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Pontuacao")
                        .HasColumnType("int");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("longtext");

                    b.Property<int>("TipoRecebimentoNotificacao")
                        .HasColumnType("int");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("IdCursoNavigationIdentificador");

                    b.HasIndex("IdInstituicaoNavigationIdentificador");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("ADE.Dominio.Models.InformacaoCurso", b =>
                {
                    b.Property<int>("Identificador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ConteudoInformacao")
                        .HasColumnType("varchar(250)");

                    b.Property<DateTime?>("DataHoraExclusao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataHoraInclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<DateTime>("DataHoraUltimaAlteracao")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<int>("IdCurso")
                        .HasColumnType("int(11)");

                    b.Property<string>("TipoInformacao")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("longtext");

                    b.HasKey("Identificador")
                        .HasName("PRIMARY");

                    b.HasIndex("IdCurso");

                    b.ToTable("InformacaoCurso");
                });

            modelBuilder.Entity("ADE.Dominio.Models.InformacaoDocumento", b =>
                {
                    b.Property<int>("Identificador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ConteudoInformacao")
                        .HasColumnType("varchar(250)");

                    b.Property<DateTime?>("DataHoraExclusao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataHoraInclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<DateTime>("DataHoraUltimaAlteracao")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<int>("IdDocumento")
                        .HasColumnType("int(11)");

                    b.Property<string>("TipoInformacao")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("longtext");

                    b.HasKey("Identificador")
                        .HasName("PRIMARY");

                    b.HasIndex("IdDocumento");

                    b.ToTable("InformacaoDocumento");
                });

            modelBuilder.Entity("ADE.Dominio.Models.OpcaoRequisito", b =>
                {
                    b.Property<int>("IdRequisito")
                        .HasColumnType("int(11)");

                    b.Property<string>("Valor")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("DataHoraExclusao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataHoraInclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<DateTime>("DataHoraUltimaAlteracao")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<int>("Identificador")
                        .HasColumnType("int");

                    b.HasKey("IdRequisito", "Valor")
                        .HasName("PRIMARY");

                    b.ToTable("OpcaoRequisito");
                });

            modelBuilder.Entity("ADE.Dominio.Models.RegistroDeHoras", b =>
                {
                    b.Property<int>("Identificador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Atividade")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<float>("CargaHoraria")
                        .HasColumnType("float");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DataHoraExclusao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataHoraInclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<DateTime>("DataHoraUltimaAlteracao")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<DateTime>("HoraFim")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("HoraInicio")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("IdUsuario")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Identificador")
                        .HasName("PRIMARY");

                    b.HasIndex("IdUsuario");

                    b.ToTable("RegistroDeHoras");
                });

            modelBuilder.Entity("ADE.Dominio.Models.RegulamentacaoCurso", b =>
                {
                    b.Property<int>("Identificador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataHoraExclusao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataHoraInclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<DateTime>("DataHoraUltimaAlteracao")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<string>("Endereco")
                        .HasColumnType("longtext");

                    b.Property<int>("IdCurso")
                        .HasColumnType("int(11)");

                    b.HasKey("Identificador")
                        .HasName("PRIMARY");

                    b.ToTable("RegulamentacaoCurso");
                });

            modelBuilder.Entity("ADE.Dominio.Models.RelacaoEntidades.ConclusaoAtividadeCurso", b =>
                {
                    b.Property<int>("Identificador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<DateTime?>("DataHoraExclusao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataHoraInclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<DateTime>("DataHoraUltimaAlteracao")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<int>("IdAtividade")
                        .HasColumnType("int(11)");

                    b.Property<string>("IdUsuario")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Identificador")
                        .HasName("PRIMARY");

                    b.HasIndex("IdAtividade");

                    b.HasIndex("IdUsuario");

                    b.ToTable("ConclusaoAtividadeCurso");
                });

            modelBuilder.Entity("ADE.Dominio.Models.RelacaoEntidades.ListaAmigos", b =>
                {
                    b.Property<int>("Identificador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<DateTime?>("DataHoraExclusao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataHoraInclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<DateTime>("DataHoraUltimaAlteracao")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<string>("IdAmigo")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("IdUsuario")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TipoRelacao")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("longtext");

                    b.HasKey("Identificador")
                        .HasName("PRIMARY");

                    b.HasIndex("IdAmigo");

                    b.ToTable("ListaAmigos");
                });

            modelBuilder.Entity("ADE.Dominio.Models.RelacaoEntidades.VisualizacaoNotificacaoGeral", b =>
                {
                    b.Property<int>("Identificador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<DateTime?>("DataHoraExclusao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataHoraInclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<DateTime>("DataHoraUltimaAlteracao")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdNotificacao")
                        .HasColumnType("int(11)");

                    b.Property<string>("IdUsuario")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Identificador")
                        .HasName("PRIMARY");

                    b.HasIndex("IdNotificacao");

                    b.HasIndex("IdUsuario");

                    b.ToTable("VisualizacaoNotificacaoGeral");
                });

            modelBuilder.Entity("ADE.Dominio.Models.Requisito", b =>
                {
                    b.Property<int>("Identificador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<string>("Bookmark")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("DataHoraExclusao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataHoraInclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<DateTime>("DataHoraUltimaAlteracao")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<string>("ElementoHTMLRequisito")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("longtext");

                    b.Property<string>("Grupo")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("longtext");

                    b.Property<bool>("InText")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("MascaraEntrada")
                        .HasColumnType("varchar(150)");

                    b.Property<string>("NomeRequisito")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<ulong>("Obrigatorio")
                        .HasColumnType("bit(1)");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.Property<string>("TipoElementoHTMLRequisito")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("longtext");

                    b.HasKey("Identificador")
                        .HasName("PRIMARY");

                    b.ToTable("Requisito");
                });

            modelBuilder.Entity("ADE.Dominio.Models.RequisitoDeDocumento", b =>
                {
                    b.Property<int>("IdDocumento")
                        .HasColumnType("int(11)");

                    b.Property<int>("IdRequisito")
                        .HasColumnType("int(11)");

                    b.Property<DateTime?>("DataHoraExclusao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataHoraInclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<DateTime>("DataHoraUltimaAlteracao")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<int>("Identificador")
                        .HasColumnType("int");

                    b.Property<sbyte>("OrdemRequisito")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(4)")
                        .HasDefaultValueSql("'1'");

                    b.HasKey("IdDocumento", "IdRequisito")
                        .HasName("PRIMARY");

                    b.HasIndex("IdDocumento")
                        .HasDatabaseName("IdDocumento");

                    b.HasIndex("IdRequisito")
                        .HasDatabaseName("IdRequisito");

                    b.ToTable("RequisitoDeDocumento");
                });

            modelBuilder.Entity("ADE.Dominio.Models.RequisitoDeUsuario", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("IdRequisito")
                        .HasColumnType("int(11)");

                    b.Property<DateTime?>("DataHoraExclusao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataHoraInclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<DateTime>("DataHoraUltimaAlteracao")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<int>("Identificador")
                        .HasColumnType("int");

                    b.Property<string>("Valor")
                        .HasColumnType("varchar(256)")
                        .HasColumnName("valor");

                    b.HasKey("UserId", "IdRequisito")
                        .HasName("PRIMARY");

                    b.HasIndex("IdRequisito")
                        .HasDatabaseName("FKRequisitoDeUsuarioIdRequisito");

                    b.ToTable("RequisitoDeUsuario");
                });

            modelBuilder.Entity("ADE.Dominio.Models.SysLogs", b =>
                {
                    b.Property<int>("Identificador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<string>("AcoesSistema")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("longtext")
                        .HasColumnName("Acao_IdAcao");

                    b.Property<DateTime?>("DataHoraExclusao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataHoraInclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<DateTime>("DataHoraUltimaAlteracao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LocalOrigem")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(150)")
                        .HasDefaultValueSql("'Error'");

                    b.Property<string>("Mensagem")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValueSql("'error'");

                    b.HasKey("Identificador")
                        .HasName("PRIMARY");

                    b.ToTable("SysLogs");
                });

            modelBuilder.Entity("ADE.Dominio.Models.TermoCompromisso", b =>
                {
                    b.Property<int>("Identificador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<DateTime?>("DataHoraExclusao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataHoraInclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<DateTime>("DataHoraUltimaAlteracao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Termos")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(500)")
                        .HasDefaultValueSql("'error'");

                    b.Property<string>("Versao")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(500)")
                        .HasDefaultValueSql("'error'");

                    b.HasKey("Identificador")
                        .HasName("PRIMARY");

                    b.ToTable("TermoCompromisso");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("RoleId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("ADE.Dominio.Models.AlteracaoEntidadesSistema", b =>
                {
                    b.HasOne("ADE.Dominio.Models.Individuais.UsuarioADE", "Autor")
                        .WithMany("AlteracaoEntidadesSistema")
                        .HasForeignKey("AutorId");

                    b.Navigation("Autor");
                });

            modelBuilder.Entity("ADE.Dominio.Models.AreaEstagioCurso", b =>
                {
                    b.HasOne("ADE.Dominio.Models.Curso", "IdCursoNavigation")
                        .WithMany("AreasEstagio")
                        .HasForeignKey("IdCurso")
                        .HasConstraintName("UKIdAreasEstagio_Curso")
                        .IsRequired();

                    b.Navigation("IdCursoNavigation");
                });

            modelBuilder.Entity("ADE.Dominio.Models.Curso", b =>
                {
                    b.HasOne("ADE.Dominio.Models.RegulamentacaoCurso", "RegulamentacaoCursos")
                        .WithOne("IdCursoNavigation")
                        .HasForeignKey("ADE.Dominio.Models.Curso", "IdCurso");

                    b.HasOne("ADE.Dominio.Models.Individuais.Instituicao", "Instituicao")
                        .WithMany("Cursos")
                        .HasForeignKey("IdInstituicao")
                        .HasConstraintName("UKIdInstituicao_Curso")
                        .IsRequired();

                    b.Navigation("Instituicao");

                    b.Navigation("RegulamentacaoCursos");
                });

            modelBuilder.Entity("ADE.Dominio.Models.Documento", b =>
                {
                    b.HasOne("ADE.Dominio.Models.Curso", "IdCursoNavigation")
                        .WithMany("Documento")
                        .HasForeignKey("IdCurso")
                        .HasConstraintName("UKIdCurso_Documento")
                        .IsRequired();

                    b.Navigation("IdCursoNavigation");
                });

            modelBuilder.Entity("ADE.Dominio.Models.HistoricoGeracaoDocumento", b =>
                {
                    b.HasOne("ADE.Dominio.Models.Documento", "IdDocumentoNavigation")
                        .WithMany("IdHistoricoGeracaoDocumento")
                        .HasForeignKey("Documento")
                        .HasConstraintName("HistoricoSistema_ibfk_2")
                        .IsRequired();

                    b.HasOne("ADE.Dominio.Models.Individuais.UsuarioADE", "IdUsuarioNavigation")
                        .WithMany("HistoricoGeracaoDocumento")
                        .HasForeignKey("IdUsuario")
                        .HasConstraintName("HistoricoSistema_ibfk_1")
                        .IsRequired();

                    b.Navigation("IdDocumentoNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("ADE.Dominio.Models.Individuais.AtividadeEstagio", b =>
                {
                    b.HasOne("ADE.Dominio.Models.Curso", "Curso")
                        .WithMany("Atividades")
                        .HasForeignKey("IdCurso")
                        .HasConstraintName("FKAtividadeEstagioIdCurso")
                        .IsRequired();

                    b.Navigation("Curso");
                });

            modelBuilder.Entity("ADE.Dominio.Models.Individuais.AtividadeUsuario", b =>
                {
                    b.HasOne("ADE.Dominio.Models.Individuais.UsuarioADE", "Usuario")
                        .WithMany("AtividadesUsuario")
                        .HasForeignKey("IdUsuario")
                        .HasConstraintName("FKAtividadeUsuarioIdUsuario")
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ADE.Dominio.Models.Individuais.FAQ", b =>
                {
                    b.HasOne("ADE.Dominio.Models.Individuais.Instituicao", "Instituicao")
                        .WithMany("FAQ")
                        .HasForeignKey("IdInstituicao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ADE.Dominio.Models.Individuais.UsuarioADE", "IdUsuarioNavigation")
                        .WithMany("FAQS")
                        .HasForeignKey("IdUsuarioResposta");

                    b.Navigation("IdUsuarioNavigation");

                    b.Navigation("Instituicao");
                });

            modelBuilder.Entity("ADE.Dominio.Models.Individuais.LogAcoesEspeciais", b =>
                {
                    b.HasOne("ADE.Dominio.Models.Individuais.UsuarioADE", "IdUsuarioNavigation")
                        .WithMany("LogAcoesEspeciais")
                        .HasForeignKey("IdUsuario")
                        .HasConstraintName("HistoricoEspecialSistema_ibfk_1")
                        .IsRequired();

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("ADE.Dominio.Models.Individuais.Logins", b =>
                {
                    b.HasOne("ADE.Dominio.Models.Individuais.UsuarioADE", "Usuario")
                        .WithMany("Logins")
                        .HasForeignKey("IdUsuario")
                        .HasConstraintName("UKIdUsuario_Logins");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ADE.Dominio.Models.Individuais.MensagemIndividual", b =>
                {
                    b.HasOne("ADE.Dominio.Models.Individuais.UsuarioADE", "IdUsuarioNavigation")
                        .WithMany("Mensagems")
                        .HasForeignKey("IdUsuarioRemetente")
                        .IsRequired();

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("ADE.Dominio.Models.Individuais.NotificacaoIndividual", b =>
                {
                    b.HasOne("ADE.Dominio.Models.Individuais.UsuarioADE", "IdUsuarioNavigation")
                        .WithMany("NotificacoesIndividuais")
                        .HasForeignKey("IdUsuarioDestino");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("ADE.Dominio.Models.Individuais.UsuarioADE", b =>
                {
                    b.HasOne("ADE.Dominio.Models.Curso", "IdCursoNavigation")
                        .WithMany()
                        .HasForeignKey("IdCursoNavigationIdentificador");

                    b.HasOne("ADE.Dominio.Models.Individuais.Instituicao", "IdInstituicaoNavigation")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdInstituicaoNavigationIdentificador");

                    b.Navigation("IdCursoNavigation");

                    b.Navigation("IdInstituicaoNavigation");
                });

            modelBuilder.Entity("ADE.Dominio.Models.InformacaoCurso", b =>
                {
                    b.HasOne("ADE.Dominio.Models.Curso", "IdCursoNavigation")
                        .WithMany("InformacaoCursos")
                        .HasForeignKey("IdCurso")
                        .IsRequired();

                    b.Navigation("IdCursoNavigation");
                });

            modelBuilder.Entity("ADE.Dominio.Models.InformacaoDocumento", b =>
                {
                    b.HasOne("ADE.Dominio.Models.Documento", "IdDocumentoNavigation")
                        .WithMany("InformacaoDocumentos")
                        .HasForeignKey("IdDocumento")
                        .IsRequired();

                    b.Navigation("IdDocumentoNavigation");
                });

            modelBuilder.Entity("ADE.Dominio.Models.OpcaoRequisito", b =>
                {
                    b.HasOne("ADE.Dominio.Models.Requisito", "IdRequisitoNavigation")
                        .WithMany("OpcaoRequisito")
                        .HasForeignKey("IdRequisito")
                        .IsRequired();

                    b.Navigation("IdRequisitoNavigation");
                });

            modelBuilder.Entity("ADE.Dominio.Models.RegistroDeHoras", b =>
                {
                    b.HasOne("ADE.Dominio.Models.Individuais.UsuarioADE", "Usuario")
                        .WithMany("RegistroDeHoras")
                        .HasForeignKey("IdUsuario")
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ADE.Dominio.Models.RelacaoEntidades.ConclusaoAtividadeCurso", b =>
                {
                    b.HasOne("ADE.Dominio.Models.Individuais.AtividadeEstagio", "Atividade")
                        .WithMany("ConclusoesAtividade")
                        .HasForeignKey("IdAtividade")
                        .HasConstraintName("FKConclusaoAtividadeCursoIdAtividade")
                        .IsRequired();

                    b.HasOne("ADE.Dominio.Models.Individuais.UsuarioADE", "Usuario")
                        .WithMany("ConclusaoAtividadeCurso")
                        .HasForeignKey("IdUsuario")
                        .HasConstraintName("FKConclusaoAtividadeCursoIdUsuario")
                        .IsRequired();

                    b.Navigation("Atividade");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ADE.Dominio.Models.RelacaoEntidades.ListaAmigos", b =>
                {
                    b.HasOne("ADE.Dominio.Models.Individuais.UsuarioADE", "IdUsuarioNavigation")
                        .WithMany("ListaAmigos")
                        .HasForeignKey("IdAmigo")
                        .IsRequired();

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("ADE.Dominio.Models.RelacaoEntidades.VisualizacaoNotificacaoGeral", b =>
                {
                    b.HasOne("ADE.Dominio.Models.AlteracaoEntidadesSistema", "IdNotificacaoNavigation")
                        .WithMany("Notificacao")
                        .HasForeignKey("IdNotificacao")
                        .HasConstraintName("UKIdNotificacao_VisualizacaoNotificacao")
                        .IsRequired();

                    b.HasOne("ADE.Dominio.Models.Individuais.UsuarioADE", "IdUsuarioNavigation")
                        .WithMany("NotificacoesVisualizadas")
                        .HasForeignKey("IdUsuario")
                        .HasConstraintName("VisualizacaoNotificacao_ibfk_1")
                        .IsRequired();

                    b.Navigation("IdNotificacaoNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("ADE.Dominio.Models.RequisitoDeDocumento", b =>
                {
                    b.HasOne("ADE.Dominio.Models.Documento", "IdDocumentoNavigation")
                        .WithMany("RequisitoDeDocumento")
                        .HasForeignKey("IdDocumento")
                        .HasConstraintName("IdDocumento")
                        .IsRequired();

                    b.HasOne("ADE.Dominio.Models.Requisito", "IdRequisitoNavigation")
                        .WithMany("RequisitoDeDocumento")
                        .HasForeignKey("IdRequisito")
                        .HasConstraintName("IdRequisito")
                        .IsRequired();

                    b.Navigation("IdDocumentoNavigation");

                    b.Navigation("IdRequisitoNavigation");
                });

            modelBuilder.Entity("ADE.Dominio.Models.RequisitoDeUsuario", b =>
                {
                    b.HasOne("ADE.Dominio.Models.Requisito", "IdRequisitoNavigation")
                        .WithMany("RequisitoDeUsuario")
                        .HasForeignKey("IdRequisito")
                        .HasConstraintName("FKRequisitoDeUsuarioIdRequisito")
                        .IsRequired();

                    b.HasOne("ADE.Dominio.Models.Individuais.UsuarioADE", "User")
                        .WithMany("RequisitoDeUsuario")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdRequisitoNavigation");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("ADE.Dominio.Models.Individuais.UsuarioADE", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("ADE.Dominio.Models.Individuais.UsuarioADE", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ADE.Dominio.Models.Individuais.UsuarioADE", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("ADE.Dominio.Models.Individuais.UsuarioADE", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ADE.Dominio.Models.AlteracaoEntidadesSistema", b =>
                {
                    b.Navigation("Notificacao");
                });

            modelBuilder.Entity("ADE.Dominio.Models.Curso", b =>
                {
                    b.Navigation("AreasEstagio");

                    b.Navigation("Atividades");

                    b.Navigation("Documento");

                    b.Navigation("InformacaoCursos");
                });

            modelBuilder.Entity("ADE.Dominio.Models.Documento", b =>
                {
                    b.Navigation("IdHistoricoGeracaoDocumento");

                    b.Navigation("InformacaoDocumentos");

                    b.Navigation("RequisitoDeDocumento");
                });

            modelBuilder.Entity("ADE.Dominio.Models.Individuais.AtividadeEstagio", b =>
                {
                    b.Navigation("ConclusoesAtividade");
                });

            modelBuilder.Entity("ADE.Dominio.Models.Individuais.Instituicao", b =>
                {
                    b.Navigation("Cursos");

                    b.Navigation("FAQ");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("ADE.Dominio.Models.Individuais.UsuarioADE", b =>
                {
                    b.Navigation("AlteracaoEntidadesSistema");

                    b.Navigation("AtividadesUsuario");

                    b.Navigation("ConclusaoAtividadeCurso");

                    b.Navigation("FAQS");

                    b.Navigation("HistoricoGeracaoDocumento");

                    b.Navigation("ListaAmigos");

                    b.Navigation("LogAcoesEspeciais");

                    b.Navigation("Logins");

                    b.Navigation("Mensagems");

                    b.Navigation("NotificacoesIndividuais");

                    b.Navigation("NotificacoesVisualizadas");

                    b.Navigation("RegistroDeHoras");

                    b.Navigation("RequisitoDeUsuario");
                });

            modelBuilder.Entity("ADE.Dominio.Models.RegulamentacaoCurso", b =>
                {
                    b.Navigation("IdCursoNavigation");
                });

            modelBuilder.Entity("ADE.Dominio.Models.Requisito", b =>
                {
                    b.Navigation("OpcaoRequisito");

                    b.Navigation("RequisitoDeDocumento");

                    b.Navigation("RequisitoDeUsuario");
                });
#pragma warning restore 612, 618
        }
    }
}
